FINIT VRAC
    + terminer modifier profil qui marche pas ( redirection)
    O + rediriger vue accueil recruteur profil candidat : bouton conditionnel en focntion du type qui redirigent vers les accueil correspondant
    O + rediriger vue accueil admin
    C + enlever bouton modifier profil dans accueil candidat
    O + régler pbm vue dmd recruteur formulaire_recruteur
    C + enlever bouton voir mes candidatures
    C + supprimer bouton active accueil candidat
    O + bouton voir offre accueil candidat
    O + bouton Postuler
    O + pb avec les demandes (ça n'insere pas quand je teste avec celeste par ex)

RECRUTEUR
    C + tester AI offre
    C + mettre l'auto increment sur numero de offre

C + vue accueil recruteur -> carte avec les offres de l'entreprise ( bouton editer, voir candidat, supprimer,), bouton creer offre, page de formulaire, 
    C + changer de profil et afficher les offres d'une entreprise
    C + créer un offre
        - améliorer front formulaire ( espaces, champs obligatoires et verification des format 
        de données) !!!!! IMPORTANT POUR LA SECURITE
        + bouton radio qui s'affichent pas trop bien
        - enlever le lieu automatique en fonction de la localisation de l'orga
    o éditer une offre
        + demander comment passer la ref de l'offre pour l'éditer
        + afficher les données pour éditer l'offre
        - updater les données
            - reformater la date
    + supprimer une offre
    + regler le pbm de la date de l'offre
    + voir les candidat
        + telecharger une piece de candidat
        + selectionner un candidat
        + rajouter un bouton pour revenir à la page accueil recrut
        + afficher quand il n'y a pas de candidat
        + optionnel refuser un candidat
    + revenir profil candidat
    + profil recruteur
        + mettre demande recruteur dedans
        + ameliorer le front -> afficher les organisation auxquelles il appartient
    + gérer les demandes de recruteur
    + modifier CDI etc en cadre ETAM jsp quoi 
    + vérifier la validité d'une offre ( soit afficher quand la durée est dépassée, soit afficher la durée, dans tout les cas
    laisser le faire manuellement)
    + fonction recherche dmdRecrut pour les en attentes et les autres (historique)

CANDIDAT
    C + mettre des valeurs dans les filtres candidat.ejs + terminer les filtres
    C + faire la route dans users.js des filtres
    C + réparer le front d'accueil candidat
    O + bouton créer dmd organisation
    optionnel + afficher message disant qu'il n'y a pas de candidatures pour l'instant profil candidat
    C + upload de fichiers 
    + reprendre le code du prof
    + arranger le front de file_upload
    + arragner le numero qui est egal à upload
    + inserer une candidature
    + inserer plusieurs pieces
    + modifier sa candidature
    + voir offre profil candidat
    + ça plante des fois
    + ne pas candiater 2 fois à une offre
    + nombre de fichier minimum
    + tri des offres par distance entre le lieu et un adresse??? PLUS DEMANDE
    + tri des offres par salaire (marche pas actuellement)

O + supprimer une demande amdin 
O + modifier les filtres pour prévoir la casse (comme dans amdin)
O + Faire un dropdown pour la navbar
O + Gérer quand tu appartient à plusieurs organisation (créer offre, afficher offres, candidatures...)
O - vérifier partout que pour checker si on est recruteur on check si l'utilisateur est bien dans APPARTENIR_ORGA
 -> FAIT ?? 

ADMIN
O + vue accueil admin -> cote a cote les dmd orga et dmd admin, 
O + OPTION si j'ai le temps -> mettre des boutons de recherche dans les demandes
+ profil admin ya rien (mettre des stats?)
+ modifier compte utilisateur?? genre faire quoi?s
+ fonctions recherche dmdOrga pour les en attentes et les autres (historique)

VRAC
Fait
    + header conditionnels
    + offres non publiees : gerer affichage et mention brouillon
    + rajouter bouton déconnexion dans tout les profils
    + annuler la casse dans les formulaires 
    + Affiner les filtres
    + rajouter condition inscription si deja une session cree
    + dans toutes les fonctions faire de la gestion d'erreurs
    stand by plusieurs orga par recruteur ( select orga pour poster une offre, afficher les offres)
    + pas possible de se co avec celeste@mail mdp:123
    + filtrage des offres qui marche pas vraiment
    + rajouter des console.log a l'emplacement des envoie de mail
    + les mdp au format de la CNIL
    + check si le compte est actif
- enlever tout les console.log inutiles
- normaliser toutes les routes
    + upload
    + user
    + recrut
    - admin
    + index
+ fonction de recherche des offres expirées dans accueil recruteur
o envoyer mail (console.log) quand une demande recrut/orga/admin est acceptée
    + message envoyé pour creation de compte
    o console log pour les autres, a voir si cela est accepté par le prof
- modifier candidature que si l'offre est toujours valable?? -> pas la peine imo
+ bouton "devenez recruteur"
+ pass.js
+ la date est bizarre dans editer offre
- faire le readme
+ front de file_upload et modifier_candidature

Formulaire : 
    - recherche d'offre
    - recherche d'orga
    - recherche d'utilisateurs
    - création dmd orga
    - création dmd recruteur
    - modification info user
    - création et modification d'offre
     

IMPORTANT
+ changer toutes la gestion des erreurs des update 
+ checker le comportement des INSERT
- Maintenant on peut checker les erreurs en passant un paramètre dans la query (voir le modèle de '/demandes_admin/accept') + nouveau components erreur 

SECURITE
- identifier 3 vulnerabilités
    x Violation de gestion d’authentification
        Le contournement de l’authentification se fait le plus souvent par :
        ➢ vol des identifiants d’un utilisateur étourdi ou négligeant
        ➢ tromperie d’un utilisateur (mail, fausse hotline,…)
        ➢ utilisation de comptes par défaut de certaines applications
        ➢ détournement appli de changement de mot de passe
        ➢ génération aléatoire et massive de couple d’identifiant
        -> jsute voler un mdp
        -> authentification en 3 étape avec une adresse mail ou telephone
    x Cross-Site Scripting (XSS)
            Les failles XSS se produisent chaque fois qu'une application 
        accepte des données non fiables et les envoie à un browser web 
        sans validation appropriée. XSS permet à des attaquants 
        d'exécuter du script dans le navigateur de la victime afin de 
        détourner des sessions utilisateur, défigurer des sites web, ou 
        rediriger l'utilisateur vers des sites malveillants.
        -> SE RENSEIGNER
        -> réfléchi
        -> stocké
    x Violation de controle d'accès 
        Manque de contrôle d’accès au niveau fonctionnel
        ▪ Exemple 1 : accéder à une fonctionnalité réservée aux admin
        ➢URL présentée à un utilisateur sans privilege : 
        www.monsite.fr/accueil
        ➢URL modifiée pour accéder à un autre dossier : 
        www.monsite.fr/admin/accueil
        -> patcher : controle des routes
    Mauvaise configuration sécurité
        ➢ Exemple 1 : console d’administration du serveur 
        d’application non désactivée avec mot de passe par 
        défaut
        ➢ Exemple 2 : listage des répertoires non désactivé
        -> SE RENSEIGNER
    Exposition de données sensibles
        -> pas trop possible
    Falsification de requête intersites (CSRF)
        -> pas trop possible
    Utilisation de composants avec des vulnérabilités connues
    Redirections et renvois non validés

- montrer faisabilité de l'attaque avant patch
- patcher ou proposer une solution et pas l'implémenter

PARTIE CONCEPTION !!!!!!!!!!!!!!!!
    + mettre a jour le diagramme de classe
    + MLD 
    + MPD
